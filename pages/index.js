import Head from "next/head";
import { useState, useEffect } from "react";
import styles from "../styles/Home.module.css";
import Bad from "../components/emojis/Bad";
import Good from "../components/emojis/Good";
import Blank from "../components/emojis/Blank";
import Card from "../components/questions/Card";
import { QA, SCORE_PATH } from "../data/data";


export default function Home() {
  const [score, setScore] = useState(0);
  const [currCard, setCurrCard] = useState(0); // current question card
  const [currOpt, setCurrOpt] = useState(1); // pic option selected
  const [answer, setAnswer] = useState(null); // confirm ans (true/false)
  const [currSelected, setCurrSelected] = useState(0); // current selected ans

  // change current selected pic (question)
  function handleSwitch(id) {
    setCurrOpt(id);
  }

  const currState = {
    currCard: currCard,
    currAnswer: answer,
    currSelected: currSelected,
    option: {
      currOpt: currOpt,
      handleSwitch: handleSwitch,
    },
  };

  // change current selected ans
  function handleSelect(id) {
    if (currSelected !== id) {
      setCurrSelected(id);
    } else {
      setCurrSelected(0);
    }
  }

  // click confirm btn
  function handleConfirm() {
    if (currSelected === QA[currCard].ans) {
      setAnswer(true);
      setScore(score + 1);
    } else {
      setAnswer(false);
    }
  }

  // click next btn
  function handleNext() {
    setCurrCard(currCard + 1);
    setCurrOpt(1);
    setCurrSelected(0);
    setAnswer(null);
  }

  useEffect(() => {
  }, [currCard, currSelected, answer]);

  const resultPath = SCORE_PATH.find((obj) => obj.id === score);

  
  return (
    <div className={styles.container}>
      <Head>
        <title>25 Apples</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        {/* {
          answer === null 
            ?  null 
            : answer === true 
              ? <Good in={answer === true} handle_next={handleNext} /> 
              : <Bad in={answer === false} handle_next={handleNext} /> 
        } */}
        <Good
          in={answer === true}
          handle_next={handleNext}
          curr_card={currCard}
          path={resultPath}
        />
        <Bad
          in={answer === false}
          handle_next={handleNext}
          curr_card={currCard}
          path={resultPath}
        />
        <Blank in={answer} />
        <Card
          curr_state={currState}
          handle_confirm={handleConfirm}
          handle_select={handleSelect}
        />
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
}
